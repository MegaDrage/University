services:

  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    networks:
      - default 
    restart: unless-stopped
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "8443:443"
      - "8080:80"
      - "8081:8080"
    volumes:
      # - "./traefik/shared_providers_dynamic.toml:/etc/traefik/shared_providers_dynamic.toml"
      - "./traefik/:/etc/traefik/"
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/etc/traefik/certs:ro"
      - "./traefik/configuration/:/configuration/"
    labels:
      - "traefik.enable=true" 
      - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_URL}`)"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-secure.basicauth.removeheader=true"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
    # logging:
      

  prometheus:
    image: prom/prometheus
    networks:
      - default
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command: |
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${PROM_URL}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.routers.prometheus.middlewares=traefik-auth"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    networks:
      - default 
    restart: unless-stopped
    user: "0"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_URL}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    networks:
      - default 
    volumes:
      - ./alertmanager:/etc/alertmanager
    environment:
      TZ: "Asia/Novosibirsk"
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/etc/alertmanager/data' 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`${ALERT_MANAGER_URL}`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.service=alertmanager"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    restart: unless-stopped
    privileged: true
    networks:
      - default 
    volumes:
      - /:/rootfs:ro
      - /var/run/:/var/run:ro
      - /sys:/sys:ro
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
      - "${XDG_RUNTIME_DIR}/docker/:/var/lib/docker:ro"
      - /dev/disk:/dev/disk:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.local`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.service=cadvisor"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"

  node-exporter:
    image: prom/node-exporter
    restart: unless-stopped 
    privileged: true
    environment:
      TZ: "Asia/Novosibirsk"
    networks:
      - default 
    volumes:
      - /proc:/host/proc:ro 
      - /sys/:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
    - 9100:9100

  telegraf:
    image: telegraf
    restart: unless-stopped 
    networks:
      - default 
    command: telegraf --config /etc/telegraf/telegraf.conf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - "${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock:ro"
    ports:
      - '8125:8125'

volumes:
    prometheus_data: {}
    grafana_data: {}
    influxdb_data: {}

networks:
  default:
    name: app_net
    external:
      true
